*添加本地ssh到git服务器
1.登录git服务器
  ssh wujj@115.29.174.239 -p 1039
2.切换到root用户
  sudo su
3.进入git用户目录
  cd /home/git/.ssh
4.编辑文件
  vim authorized_keys
  将本机id_rsa.pub中的ssh复制替换进去
  按esc，shift+:,输入wq保存，输入exit退出
5.scp -P 1039 本地rsa.pub路径 wujj@115.29.174.239:/tmp   #在本地操作，复制到git服务器tmp临时文件夹中
6.mv /tmp/rsa.pub /home/git/repositories/gitosis-admin.git/gitosis-export/keydir  #git服务器上操作
6./home/git/repositories/gitosis-admin.git/gitosis.conf    #添加权限

*git clone ssh://git@115.29.174.239:1039/insight4hr_talenkr_server.git

#开启终端多窗口ctrl+shift+T
#终端命令输入历史ctrl+R

#nginx+passenger部署Rails项目
	*https://www.phusionpassenger.com/library/install/nginx/install/oss/rubygems_rvm/ 
	*https://www.phusionpassenger.com/library/deploy/nginx/deploy/ruby/
1.gem install passenger
2.passenger-install-nginx-module
3.按提示安装nginx成功,配置nginx.conf文件
4./opt/nginx/conf/nginx.conf下
5.server {
		  #监听的端口
		  listen	   8080;
		  server_name  域名或ip地址;
		  #web根目录，rails项目下的public
		  root /xx/xx/xx/public;
		  #一定要记得将这个选项设置为on
		  passenger_enabled on;
	  }	
6.停止nginx服务service nginx stop
7.启动nginx服务sudo /opt/nginx/sbin/nginx
8.杀死进程方法 netstat -ntpl,kill pid或sudo kill $(cat /opt/nginx/logs/nginx.pid)

#使用rails shell命令查看数据库
登录服务器ssh wujj@115.29.46.56 -p 1039   进入/disk1/xx/xx...目录
1.RAILS_ENV=house rails c
2.cat config/database.yml
  mysql -uroot -p
#开启/关闭delayed_jobs
RAILS_ENV=house bundle exec rake jobs:work
RAILS_ENV=house bundle exec rake jobs:workoff
#关闭服务器passenger stop -p 3000
#开启服务器passenger start -a 127.0.0.1 -p -e house -d

#部署线上服务器(ssh wujj@115.29.46.56 -p 1039和ssh wujj@123.56.205.194)
git pull --no-ff origin production #拉取
rake db:migrate RAILS_ENV=production #数据迁移
RAILS_ENV=production rake db:seeds:xxx #更新指定文件中数据
RAILS_ENV=production rake asserts:precompile #资源预编译
sudo /opt/nginx/sbin/nginx -s reload	#重新载入
RAILS_ENV=production bundle exec  ruby bin/delayed_job start #开启delayed_jobs

#查看服务器运行log
主目录log下 tail xxx.* -f

